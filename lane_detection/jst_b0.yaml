# Training settings
seed: 0
exps_dir: 'experiments'
iter_log_interval: 1
iter_time_window: 100
model_save_interval: 1
backup:
model:
  name: PolyRegression
  parameters:
    num_outputs: 90 # (10 lanes) * (1 conf + 2 (upper & lower) + 6 poly coeffs)
    pretrained: true
    backbone: 'efficientnet-b1'
    pred_category: true
    extra_outputs: 30 # 10 lanes * 3 classes
    curriculum_steps: [0, 0, 0, 0]
loss_parameters:
  conf_weight: 1
  lower_weight: 1
  upper_weight: 1
  cls_weight: 1
  poly_weight: 300
batch_size: 24
epochs: 1500
optimizer:
  name: Adam
  parameters:
    lr: 3.0e-4
lr_scheduler:
  name: CosineAnnealingLR
  parameters:
    T_max: 20

# Testing settings
test_parameters:
  conf_threshold: 0.5

# Dataset settings
datasets:
  train:
    type: LaneDataset
    parameters:
      dataset: JST
      split: train
      img_size: [360, 640]
      normalize: true
      aug_chance: 0.0 # 1/11
      augmentations: 
       - name: Affine
         parameters:
           rotate: !!python/tuple [-10, 10]
       - name: HorizontalFlip
         parameters:
           p: 0.5
      root: "/fs/scratch/ccserver_cc_cr_challenge/lane-detection/train/images"

  test: &test
    type: LaneDataset
    parameters:
      dataset: JST
      split: val
      max_lanes: 10
      img_size: [360, 640]
      root: "/fs/scratch/ccserver_cc_cr_challenge/lane-detection/train/images"
      normalize: true
      augmentations: []

  # val = test
  val:
    <<: *test
